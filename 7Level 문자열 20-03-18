#include <iostream>
#include <string>

using namespace std;

int main()
{
	int cnt = 0;
	string str;
	cin >> str;

	for (int i = 0; i < str.size(); i++)
	{
		if (str.substr(i, 3) != "dz=")
		{
			if (str.substr(i, 2) == "lj" || str.substr(i, 2) == "nj" || str.substr(i, 2) == "c=" || str.substr(i, 2) == "c-" || str.substr(i, 2) == "d-"
				|| str.substr(i, 2) == "s=" || str.substr(i, 2) == "z=")
			{
				cnt += 1;
				i++;
			}
			else
				cnt += 1;
		}
		else if (str.substr(i, 3) == "dz=")
		{
			cnt += 1;
			i += 2;
		}
	}
	cout << cnt;
	return 0;
}
//string헤더파일의 .substr(시작위치,갯수)을 이용해서 풀었다. 처음에 문자열의 3개를 봐서 dz=가 들었있는지 확인후 들어있으면 cnt를 1개 증가시키고
//i도2를 증가시킨다. 이 방법을 2글자인 문자를 비교해서 반복한다.
------------------------------------------------------------------------------------------------------------------
#include <iostream>
#include <string>

using namespace std;

int main()
{
	string str;
	int n;
	bool isCheck[26];
	cin >> n;
	int cnt = n;
	for (int i = 0; i < n; i++)
	{
		for (int j = 0; j < 26; j++)
			isCheck[j] = false;

		cin >> str;
		isCheck[str[0] - 'a'] = true;
		for (int j = 1; j < str.size(); j++)
		{
			if (str[j - 1] == str[j])
				continue;
			else if (isCheck[str[j] - 'a'] == true)
			{
				cnt--;
				break;
			}
			isCheck[str[j] - 'a'] = true;
		}
	}
	cout << cnt;
	return 0;
}
//도저히 생각이 안나서 블로그의 도움을 받았다. 오늘은 이해만 하고 내일 다시 생각해보면서 내 코드로 다시 짜봐야겠다.
